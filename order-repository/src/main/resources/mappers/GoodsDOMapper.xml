<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdu.lys.graduation.repository.dao.GoodsDOMapper" >
  <resultMap id="BaseResultMap" type="com.cdu.lys.graduation.repository.entity.GoodsDO" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ingredients" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="weight" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="taste" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_meat" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="price" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="stock" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sales" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="score" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="cost" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="goods_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="is_delete" jdbcType="CHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_name, description, ingredients, weight, taste, is_meat, price, stock, sales, 
    score, cost, goods_type, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDOExample" >
    delete from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods (goods_name, description, ingredients, 
      weight, taste, is_meat, 
      price, stock, sales, 
      score, cost, goods_type, 
      create_time, update_time, is_delete
      )
    values (#{goodsName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{ingredients,jdbcType=VARCHAR}, 
      #{weight,jdbcType=VARCHAR}, #{taste,jdbcType=VARCHAR}, #{isMeat,jdbcType=CHAR}, 
      #{price,jdbcType=DOUBLE}, #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, 
      #{score,jdbcType=DOUBLE}, #{cost,jdbcType=DOUBLE}, #{goodsType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="ingredients != null" >
        ingredients,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="taste != null" >
        taste,
      </if>
      <if test="isMeat != null" >
        is_meat,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="sales != null" >
        sales,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="goodsType != null" >
        goods_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="taste != null" >
        #{taste,jdbcType=VARCHAR},
      </if>
      <if test="isMeat != null" >
        #{isMeat,jdbcType=CHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null" >
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="goodsType != null" >
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDOExample" resultType="java.lang.Integer" >
    select count(*) from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.ingredients != null" >
        ingredients = #{record.ingredients,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.taste != null" >
        taste = #{record.taste,jdbcType=VARCHAR},
      </if>
      <if test="record.isMeat != null" >
        is_meat = #{record.isMeat,jdbcType=CHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null" >
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsType != null" >
        goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      ingredients = #{record.ingredients,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=VARCHAR},
      taste = #{record.taste,jdbcType=VARCHAR},
      is_meat = #{record.isMeat,jdbcType=CHAR},
      price = #{record.price,jdbcType=DOUBLE},
      stock = #{record.stock,jdbcType=INTEGER},
      sales = #{record.sales,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DOUBLE},
      cost = #{record.cost,jdbcType=DOUBLE},
      goods_type = #{record.goodsType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDO" >
    update tb_goods
    <set >
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        ingredients = #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="taste != null" >
        taste = #{taste,jdbcType=VARCHAR},
      </if>
      <if test="isMeat != null" >
        is_meat = #{isMeat,jdbcType=CHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null" >
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="goodsType != null" >
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdu.lys.graduation.repository.entity.GoodsDO" >
    update tb_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      ingredients = #{ingredients,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      taste = #{taste,jdbcType=VARCHAR},
      is_meat = #{isMeat,jdbcType=CHAR},
      price = #{price,jdbcType=DOUBLE},
      stock = #{stock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      cost = #{cost,jdbcType=DOUBLE},
      goods_type = #{goodsType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>